<?php

use \Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use \Drupal\Core\Ajax\AjaxResponse;
use \Drupal\Core\Ajax\PrependCommand;
use \Drupal\Core\Ajax\ReplaceCommand;
use \Drupal\node\Entity\Node;
use \Drupal\views\ViewExecutable;

function biopama_form_hooks_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
	if ($form_id == 'node_policy_form') {
		$form['actions']['submit']['#ajax'] = array('callback' => 'biopamaFormSubmitPolicy');
		$form['messages']['status'] = ['#type' => 'status_messages'];
	}
	if ($form_id == 'node_goal_target_form') {
		$form['actions']['submit']['#ajax'] = array('callback' => 'biopamaFormSubmitTarget');
		$form['messages']['status'] = ['#type' => 'status_messages'];
	}
	if ($form_id == 'node_indicator_form') {
		$form['actions']['submit']['#ajax'] = array('callback' => 'biopamaFormSubmitIndicator');
		$form['messages']['status'] = ['#type' => 'status_messages'];
	}
	if ($form_id == 'node_policy_edit_form' || $form_id == 'node_goal_target_edit_form' || $form_id == 'node_indicator_edit_form') {
		$form['actions']['submit']['#ajax'] = array('callback' => 'biopamaFormEditNode');
		$form['messages']['status'] = ['#type' => 'status_messages',];
	}
}

function biopamaFormSubmitPolicy($form, FormStateInterface $form_state) {
	// Instantiate an AjaxResponse Object to return.
	$ajax_response = new AjaxResponse();
	$status_messages = array('#type' => 'status_messages');
	$messages = \Drupal::service('renderer')->renderRoot($status_messages);
	//\Drupal::logger('biopama_form_hooks')->notice("something happened.");

    // If there are any form errors, re-display the form.
    if ($form_state->hasAnyErrors()) {
      $ajax_response->addCommand(new PrependCommand('.layout-region-node-footer', $messages));
    }
    else {
      $ajax_response->addCommand(new ReplaceCommand('.layout-region-node-footer', $messages.'<a href="node/add/policy" class="use-ajax add-policy" data-dialog-type="dialog" data-dialog-renderer="off_canvas" data-dialog-options="{&quot;width&quot;:400}">Policy added! Click here to add another policy</a>'));
    }
	return $ajax_response;
}
function biopamaFormSubmitTarget($form, FormStateInterface $form_state) {
	// Instantiate an AjaxResponse Object to return.
	$ajax_response = new AjaxResponse();
	$status_messages = array('#type' => 'status_messages');
	$messages = \Drupal::service('renderer')->renderRoot($status_messages);
	//\Drupal::logger('biopama_form_hooks')->notice("something happened.");

    // If there are any form errors, re-display the form.
    if ($form_state->hasAnyErrors()) {
      $ajax_response->addCommand(new PrependCommand('.layout-region-node-footer', $messages));
    }
    else {
      $ajax_response->addCommand(new ReplaceCommand('.layout-region-node-footer', $messages.'<a href="node/add/goal_target" class="use-ajax add-target" data-dialog-type="dialog" data-dialog-renderer="off_canvas" data-dialog-options="{&quot;width&quot;:400}">Target added! Click here to add another target</a>'));
    }
	return $ajax_response;
}
function biopamaFormSubmitIndicator($form, FormStateInterface $form_state) {
	// Instantiate an AjaxResponse Object to return.
	$ajax_response = new AjaxResponse();
	$status_messages = array('#type' => 'status_messages');
	$messages = \Drupal::service('renderer')->renderRoot($status_messages);
	//\Drupal::logger('biopama_form_hooks')->notice("something happened.");

    // If there are any form errors, re-display the form.
    if ($form_state->hasAnyErrors()) {
      $ajax_response->addCommand(new PrependCommand('.layout-region-node-footer', $messages));
    }
    else {
      $ajax_response->addCommand(new ReplaceCommand('.layout-region-node-footer', $messages.'<a href="node/add/goal_target" class="use-ajax add-indicator" data-dialog-type="dialog" data-dialog-renderer="off_canvas" data-dialog-options="{&quot;width&quot;:400}">Indicator added! Click here to add another indicator</a>'));
    } 
	return $ajax_response;
}
function biopamaFormEditNode($form, FormStateInterface $form_state) {
	// Instantiate an AjaxResponse Object to return.
	$ajax_response = new AjaxResponse();
	$status_messages = array('#type' => 'status_messages');
	$messages = \Drupal::service('renderer')->renderRoot($status_messages);
	$ajax_response->addCommand(new PrependCommand('.layout-region-node-footer', $messages));
	return $ajax_response;
}
/* function biopama_form_hooks_views_pre_render(ViewExecutable $view) {
	//dsm($display_id);
	if (isset($view) && ($view->storage->id() == 'country_indicators_by_sc')) {
		$view->element['#attached']['library'][] = 'bootstrap_barrio_biopama/indicator-country-chart';
	}
} */
